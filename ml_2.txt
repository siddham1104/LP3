import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
from sklearn.metrics import precision_score, recall_score, f1_score, roc_auc_score

df = pd.read_csv('emails.csv')

null_counts = df.isnull().sum()

columns_with_nulls = null_counts[null_counts >= 1]
columns_with_nulls

df.info()

X = df.iloc[:,1:3001]
X.head()

y = df.iloc[:,-1]
y.head()

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size= .2 ,random_state = 42)

# Scaling the data
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.fit_transform(X_test)

# Initialize and train the K-Nearest Neighbors (KNN) classifier
knn_classifier = KNeighborsClassifier(n_neighbors=5)
knn_classifier.fit(X_train, y_train)

# Make predictions with KNN
y_pred_knn = knn_classifier.predict(X_test)

# Evaluate KNN performance
knn_accuracy = accuracy_score(y_test, y_pred_knn)
knn_confmatrix = confusion_matrix(y_test, y_pred_knn)
knn_report = classification_report(y_test, y_pred_knn)


print("KNN Accuracy: ", knn_accuracy)
print("KNN Classification report: ", knn_report)

# Confusion matrix graph using seaborn
import seaborn as sns
sns.heatmap(knn_confmatrix, annot=True, fmt='.2f', cmap='Blues')
plt.xlabel('Predicted')
plt.ylabel('True')
plt.title('Confusion Matrix')
plt.show()

# Initialize and train the Support Vector Machine (SVM) classifier
svm_classifier = SVC()
svm_classifier.fit(X_train, y_train)

# Make predictions with SVM
y_pred_svm = svm_classifier.predict(X_test)

# Evaluate SVM performance
svm_accuracy = accuracy_score(y_test, y_pred_svm)
svm_confmatrix = confusion_matrix(y_test, y_pred_svm)
svm_report = classification_report(y_test, y_pred_svm)

print("SVM Accuracy: ", svm_accuracy)
print("SVM Classification report: ",svm_report)

# Confusion matrix graph using seaborn
import seaborn as sns
sns.heatmap(svm_confmatrix, annot=True, fmt='.2f', cmap='Blues')
plt.xlabel('Predicted')
plt.ylabel('True')
plt.title('Confusion Matrix')
plt.show()

